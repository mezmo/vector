---
apiVersion: "deploy.razee.io/v1alpha2"
kind: MustacheTemplate
metadata:
  name: vector
  namespace: pipeline
  labels:
    app: vector
    razee/watch-resource: "lite"
    deploy.razee.io/Reconcile: 'false'
  annotations:
    razee.io/git-repo: "${GIT_URL}"
    razee.io/commit-sha: "${GIT_SHA1}"
    razee.io/build-url: "${BUILD_URL}"
    razee.io/branch: "${GIT_BRANCH}"
spec:
  env:

  - name: vector-partitions
    optional: true
    # These defaults are unused in practice, but serve as documentation
    # of what options are available per-vector-partition.
    default: |
      [{
        "partition-id": "gen0",
        "requests-cpu": 16,
        "requests-memory": "32Gi",
        "requests-storage": "10Gi",
        "storage-class": "gp3-us-east-1a",
        "limits-memory": "72Gi",
        "aggregation-cardinality-limit": "20000",
        "vector-threads": "10",
        "allocation-tracing-enabled": false,
        "sink-buffer-max-events": "1000",
        "state-db-enabled": false,
        "state-db-requests-cpu": 1,
        "state-db-requests-memory": "512Mi",
        "state-db-limits-cpu": 4,
        "state-db-limits-memory": "2Gi",
        "state-connection-retry-factor-ms": 150,
        "state-connection-retry-count": 10,
        "state-connection-retry-max-delay-ms": 7500,
        "state-connection-timeout-ms": 2500,
        "state-connection-response-timeout-ms": 2500,
        "max-rocksdb-log-file-size": 10485760,
        "max-rocksdb-log-file-num": 5
      }]
    valueFrom:
      configMapKeyRef:
        namespace: pipeline
        name: vector-partitions
        key: vector-partitions
        type: json

  - name: mezmo_reshape_message
    optional: true
    default: '0'
    valueFrom:
      configMapKeyRef:
        name: pipeline-env-config
        namespace: pipeline
        key: reshape-message-in-vector

  - name: arch
    optional: true
    default: ""
    valueFrom:
      configMapKeyRef:
        name: vector
        key: arch

  - name: cluster-name
    optional: false
    valueFrom:
      configMapKeyRef:
        name: control
        namespace: default
        key: cluster-name

  - name: config_reload_max_sec
    optional: true
    default: '150'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: config-reload-max-sec

  - name: config_reduce_byte_threshold_per_state
    optional: true
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: config-reduce-byte-threshold-per-state

  - name: config_reduce_byte_threshold_all_states
    optional: true
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: config-reduce-byte-threshold-all-states

  - name: mezmo_event_trace_enabled
    optional: true
    default: '0'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: event-trace-enable

  - name: db_connection_pool_size
    optional: true
    default: '4'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: db-connection-pool-size

  - name: mezmo_metrics_db_secret
    optional: true
    default: 'pipeline-pguser-metrics'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: metrics-db-secret

  - name: mezmo_metrics_db_secret_uri_key
    optional: true
    default: 'uri'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: metrics-db-secret-uri-key

  - name: mezmo_pipeline_db_secret
    optional: true
    default: 'pipeline-pguser-pipeline'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: pipeline-db-secret

  - name: mezmo_pipeline_db_secret_uri_key
    optional: true
    default: 'uri'
    valueFrom:
      configMapKeyRef:
        name: vector
        namespace: pipeline
        key: pipeline-db-secret-uri-key

  strTemplates:
  - | # yaml
    apiVersion: v1
    kind: List
    items:
    {{#vector-partitions}}
    - apiVersion: v1
      kind: Service
      metadata:
        name: vector-{{partition-id}}
        namespace: pipeline
        labels:
          deploy.razee.io/Reconcile: 'false'
          deploy.razee.io/mode: 'StrategicMergePatch'
          app: vector
          partition: {{partition-id}}
          version: "${APP_VERSION}"
      spec:
        clusterIP: None
        selector:
          app: vector
          partition: {{partition-id}}
        ports:
          - name: vector-graphql-api
            protocol: TCP
            port: 8686
            targetPort: 8686

    - apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: vector-{{partition-id}}
        namespace: pipeline
      spec:
        maxUnavailable: 1
        selector:
          matchLabels:
            app: vector
            partition: {{partition-id}}

    - apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: vector-{{partition-id}}
        namespace: pipeline
        labels:
          app: vector
          partition: {{partition-id}}
          version: "${APP_VERSION}"
      spec:
        serviceName: vector-{{partition-id}}
        podManagementPolicy: "Parallel"
        selector:
          matchLabels:
            app: vector
            partition: {{partition-id}}
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/path: "/metrics"
              prometheus.io/port: "9598"
            labels:
              app: vector
              partition: {{partition-id}}
          spec:
            containers:
              - name: vector
                image: "us.gcr.io/logdna-k8s/vector:${APP_VERSION}"
                imagePullPolicy: IfNotPresent
                env:
                - name: PARTITION_NAME
                  value: {{partition-id}}

                - name: VECTOR_LOG
                  valueFrom:
                    configMapKeyRef:
                      name: vector
                      key: loglevel
                      optional: true

                - name: _RJEM_MALLOC_CONF
                  valueFrom:
                    configMapKeyRef:
                      name: vector
                      key: malloc-conf
                      optional: true

                - name: PIPELINE_SERVICE_CONTROL_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: pipeline
                      key: vector-control-token

                - name: MEZMO_METRICS_DB_URL
                  valueFrom:
                    secretKeyRef:
                      name: {{mezmo_metrics_db_secret}}
                      key: {{mezmo_metrics_db_secret_uri_key}}

                - name: USAGE_METRICS_PROFILE_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      name: pipeline-env-config
                      key: usage-metrics-profile-enabled
                      optional: true

                - name: USAGE_METRICS_TRACK_METADATA_SIZE
                  valueFrom:
                    configMapKeyRef:
                      name: pipeline-env-config
                      key: usage-metrics-track-metadata-size
                      optional: true

                - name: USAGE_METRICS_PROFILE_FLUSH_INTERVAL_SECS
                  valueFrom:
                    configMapKeyRef:
                      name: pipeline-env-config
                      key: usage-metrics-profile-flush-interval-secs
                      optional: true

                - name: MEZMO_PIPELINE_DB_URL
                  valueFrom:
                    secretKeyRef:
                      name: {{mezmo_pipeline_db_secret}}
                      key: {{mezmo_pipeline_db_secret_uri_key}}

                - name: POD_NAME # This is what vector uses as the pod name
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name

                - name: MEZMO_RESHAPE_MESSAGE
                  value: "{{{mezmo_reshape_message}}}"

                - name: CONFIG_RELOAD_MAX_SEC
                  value: "{{{config_reload_max_sec}}}"

                - name: REDUCE_BYTE_THRESHOLD_PER_STATE
                  value: "{{{config_reduce_byte_threshold_per_state}}}"

                - name: REDUCE_BYTE_THRESHOLD_ALL_STATES
                  value: "{{{config_reduce_byte_threshold_all_states}}}"

                - name: MEZMO_AGGREGATION_CARDINALITY_LIMIT
                  value: "{{{aggregation-cardinality-limit}}}"

                - name: MEZMO_STATE_CONNECTION_STRING
                  value: "redis://vector-state-{{partition-id}}:6379/0"

                - name: MEZMO_STATE_CONNECTION_RETRY_FACTOR_MS
                  value: "{{{state-connection-retry-factor-ms}}}"

                - name: MEZMO_STATE_CONNECTION_RETRY_COUNT
                  value: "{{{state-connection-retry-count}}}"

                - name: MEZMO_STATE_CONNECTION_RETRY_MAX_DELAY_MS
                  value: "{{{state-connection-retry-max-delay-ms}}}"

                - name: MEZMO_STATE_CONNECTION_TIMEOUT_MS
                  value: "{{{state-connection-timeout-ms}}}"

                - name: MEZMO_STATE_CONNECTION_RESPONSE_TIMEOUT_MS
                  value: "{{{state-connection-response-timeout-ms}}}"

                - name: MAX_ROCKSDB_LOG_FILE_SIZE
                  value: "{{{max-rocksdb-log-file-size}}}"

                - name: MAX_ROCKSDB_LOG_FILE_NUM
                  value: "{{{max-rocksdb-log-file-num}}}"

                - name: MEZMO_EVENT_TRACE_ENABLED
                  value: "{{{mezmo_event_trace_enabled}}}"

                - name: DB_CONNECTION_POOL_SIZE
                  value: "{{{db_connection_pool_size}}}"

                {{#allocation-tracing-enabled}}
                - name: ALLOCATION_TRACING
                  value: "true"
                {{/allocation-tracing-enabled}}

                {{#vector-threads}}
                - name: VECTOR_THREADS
                  value: "{{{vector-threads}}}"
                {{/vector-threads}}

                {{#sink-buffer-max-events}}
                - name: MEZMO_MEM_BUFFER_MAX_EVENTS
                  value: "{{{sink-buffer-max-events}}}"
                {{/sink-buffer-max-events}}

                args:
                  - --config-dir
                  - /etc/vector/
                startupProbe:
                  timeoutSeconds: 5
                  httpGet:
                    path: /health
                    port: 8686
                  periodSeconds: 10
                  failureThreshold: 18
                ports:
                - containerPort: 9599
                  name: tcp-prometheus
                  protocol: TCP
                resources:
                  requests:
                    memory: "{{{requests-memory}}}"
                    cpu: "{{{requests-cpu}}}"
                  limits:
                    memory: "{{{limits-memory}}}"
                    {{#limits-cpu}}
                    cpu: "{{{limits-cpu}}}"
                    {{/limits-cpu}}
                volumeMounts:
                  - name: data
                    mountPath: "/data/vector"
                  - name: vector-component-state
                    mountPath: "/data/component-state"
                  - name: config
                    mountPath: "/etc/vector/"
                    readOnly: true
            terminationGracePeriodSeconds: 60
            volumes:
              - name: data
                emptyDir: {}
              - name: config
                projected:
                  sources:
                    - configMap:
                        name: vector
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchLabels:
                  app: vector
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: workload-pipeline
                      operator: In
                      values:
                      - enabled
                    {{#arch}}
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                        - {{{arch}}}
                    {{/arch}}
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: "kubernetes.io/hostname"
                    labelSelector:
                      matchExpressions:
                      - key: partition
                        operator: In
                        values:
                        - {{partition-id}}
            tolerations:
            - effect: NoSchedule
              key: workload-pipeline
              operator: Equal
              value: enabled

        volumeClaimTemplates:
        - metadata:
            name: vector-component-state
            annotations:
              volume.beta.kubernetes.io/storage-class: "{{{storage-class}}}"
            labels:
              app: vector
              partition: "{{{partition-id}}}"
          spec:
            accessModes:
            - ReadWriteOnce
            storageClassName: "{{{storage-class}}}"
            resources:
              requests:
                storage: "{{{requests-storage}}}"

    {{/vector-partitions}}
